#!/bin/bash

# File preview handler for lf.

set -C -f
IFS="$(printf '%b_' '\n')"
IFS="${IFS%_}"

image() {
  if [ -f "$1" ] && command -v kitty >/dev/null 2>&1; then
    file=$1
    w=$2
    h=$3
    x=$4
    y=$5
    kitty +kitten icat --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$file" </dev/null >/dev/tty
    mediainfo --Output="Video;%Duration/String%" "$6"
  else
    chafa "$1" -s "$4x"
    mediainfo "$6"
  fi
}

# Note that the cache file name is a function of file information, meaning if
# an image appears in multiple places across the machine, it will not have to
# be regenerated once seen.

case "$(file --dereference --brief --mime-type -- "$1")" in
image/avif)
  CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
  [ ! -f "$CACHE" ] && magick "$1" "$CACHE.jpg"
  image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
  ;;
image/vnd.djvu)
  CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
  [ ! -f "$CACHE" ] && djvused "$1" -e 'select 1; save-page-with /dev/stdout' | magick -density 200 - "$CACHE.jpg" >/dev/null 2>&1
  image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
  ;;
image/svg+xml | image/png)
  CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
  [ ! -f "$CACHE" ] && inkscape --convert-dpi-method=none -o "$CACHE.png" --export-overwrite -D --export-png-color-mode=RGBA_16 "$1"
  image "$CACHE.png" "$2" "$3" "$4" "$5" "$1"
  ;;
image/x-xcf | image/jpg | image/jpeg)
  CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
  [ ! -f "$CACHE.jpg" ] && magick "$1[0]" "$CACHE.jpg"
  image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
  ;;
image/*) image "$1" "$2" "$3" "$4" "$5" "$1" ;;
text/html) lynx -width="$4" -display_charset=utf-8 -dump "$1" ;;
text/troff) man ./ "$1" | col -b ;;
text/* | */xml | application/json | application/x-ndjson) bat -p --theme ansi --terminal-width "$(($4 - 2))" -f "$1" ;;
audio/*) mediainfo "$1" || exit 1 ;;
video/* | application/octet-stream | application/vnd.rn-realmedia)
  # CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
  # [ ! -f "$CACHE" ] &&
  ffmpegthumbnailer -i "$1" -o "$CACHE.jpg" -s 0 -q 5
  image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
  ;;
*/pdf)
  CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
  [ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
  image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
  ;;
application/vnd.openxmlformats-officedocument.presentationml.presentation)
  CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
  [ ! -f "$CACHE.jpg" ] && unoconv -f jpg -o "$CACHE.jpg" "$1"
  image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
  ;;
application/x-hwp)
  CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
  OUT_DIR="$(dirname "$CACHE")"
  [ ! -f "$CACHE.jpg" ] && libreoffice --headless --convert-to jpg --outdir "$OUT_DIR" "$1" && mv "$OUT_DIR/$(basename "$1" .hwp).jpg" "$CACHE.jpg"
  image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
  ;;
*/epub+zip | */mobi*)
  CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
  [ ! -f "$CACHE.jpg" ] && gnome-epub-thumbnailer "$1" "$CACHE.jpg"
  image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
  ;;
application/*zip) atool --list -- "$1" ;;
*opendocument*) odt2txt "$1" ;;
application/pgp-encrypted) gpg -d -- "$1" ;;
application/vnd.openxmlformats-officedocument.wordprocessingml.document)
  CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
  [ ! -f "$CACHE.txt" ] && pandoc "$1" -t plain -o "$CACHE.txt"
  bat -p --theme ansi --terminal-width "$(($4 - 2))" -f "$CACHE.txt"
  ;;
esac
exit 1
