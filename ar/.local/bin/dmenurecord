#!/bin/sh

usage() {
  echo "Asks for recording type via dmenu."
  echo "If there is already a running instance, user will be prompted to end it. "
  echo ""
  echo "Usage: ${0##*/} [-h] [-a|--audio|audio] [-k|--kill|kill] [-v|--video|video] [-s|--screencast|screencast]"
  echo ""
  echo "Options:"
  echo "  - audio         : Records only audio"
  echo "  - kill          : Kills existing recording"
  echo "  - video         : Records only screen"
  echo "  - screencast    : Records both audio and screen"
}

getdim() { xrandr | grep -oP '(?<=current ).*(?=,)' | tr -d ' '; }

updateicon() {
  echo "$1" >/tmp/recordingicon
  pkill -RTMIN+24 "${STATUSBAR:-dwmblocks}"
}

killrecording() {
  recpid="$(cat /tmp/recordingpid)"
  kill -15 "$recpid"
  rm -f /tmp/recordingpid
  updateicon ""
  pkill -RTMIN+24 "${STATUSBAR:-dwmblocks}"
}

screencast() {
  ffmpeg -y \
    -f x11grab \
    -framerate 30 \
    -s "$(getdim)" \
    -i "$DISPLAY" \
    -r 24 \
    -use_wallclock_as_timestamps 1 \
    -f alsa -thread_queue_size 1024 -i default \
    -c:v h264 \
    -crf 0 -preset ultrafast -c:a aac \
    "$recordings/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
  echo $! >/tmp/recordingpid
  updateicon "‚è∫Ô∏èüéôÔ∏è"
}

video() {
  ffmpeg \
    -f x11grab \
    -framerate 30 \
    -s "$(getdim)" \
    -i "$DISPLAY" \
    -c:v libx264 -qp 0 -r 30 \
    "$recordings/video-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! >/tmp/recordingpid
  updateicon "‚è∫Ô∏è"
}

webcamhidef() {
  ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 1920x1080 \
    "$recordings/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! >/tmp/recordingpid
  updateicon "üé•"
}

webcam() {
  ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 640x480 \
    "$recordings/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! >/tmp/recordingpid
  updateicon "üé•"
}

audio() {
  ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$recordings/audio-$(date '+%y%m%d-%H%M-%S').flac" &
  echo $! >/tmp/recordingpid
  updateicon "üéôÔ∏è"
}

askrecording() {
  choice=$(printf "screencast\\nvideo\\nvideo selected\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
  case "$choice" in
  screencast) screencast ;;
  audio) audio ;;
  video) video ;;
  *selected) videoselected ;;
  webcam) webcam ;;
  "webcam (hi-def)") webcamhidef ;;
  esac
}

asktoend() {
  response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
    [ "$response" = "Yes" ] && killrecording
}

videoselected() {
  slop -f "%x %y %w %h" >/tmp/slop
  read -r X Y W H </tmp/slop
  rm /tmp/slop

  ffmpeg \
    -f x11grab \
    -framerate 30 \
    -video_size "$W"x"$H" \
    -i :0.0+"$X,$Y" \
    -c:v libx264 -qp 0 -r 30 \
    "$recordings/box-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! >/tmp/recordingpid
  updateicon "‚è∫Ô∏è"
}

recordings="${XDG_VIDEOS_DIR:-$HOME/Videos}/recordings"
[ -d "$recordings" ] || mkdir -p "$recordings"

case "$1" in
-h | --help | help) usage && exit 0 ;;
-a | --audio | audio) audio ;;
-k | --kill | kill) killrecording ;;
-s | --screencast | screencast) screencast ;;
-v | --video | video) video ;;
*selected) videoselected ;;
*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording ;;
esac
